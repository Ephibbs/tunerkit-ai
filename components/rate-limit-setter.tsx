/**
* This code was generated by v0 by Vercel.
* @see https://v0.dev/t/YrGCBiQkbd4
* Documentation: https://v0.dev/docs#integrating-generated-code-into-your-nextjs-app
*/

/** Add fonts into your Next.js project:

import { Inter } from 'next/font/google'

inter({
  subsets: ['latin'],
  display: 'swap',
})

To read more about using these font, please visit the Next.js documentation:
- App Directory: https://nextjs.org/docs/app/building-your-application/optimizing/fonts
- Pages Directory: https://nextjs.org/docs/pages/building-your-application/optimizing/fonts
**/
"use client"

import { useState } from "react"
import { Label } from "@/components/ui/label"
import { Slider } from "@/components/ui/slider"
import { Input } from "@/components/ui/input"
import { RadioGroup, RadioGroupItem } from "@/components/ui/radio-group"

export function RateLimitSetter({projectId, rateLimit, ratePeriod, type, unit}: any) {
  const [value, setValue] = useState(rateLimit)
  const [timeUnit, setTimeUnit] = useState(ratePeriod)
  const [rateType, setRateType] = useState(type)
  const [rateUnit, setRateUnit] = useState(unit)
  return (
    <div className="bg-background rounded-lg border p-6 w-full max-w-md">
      <div className="grid gap-3">
        <div>
          <div className="flex items-center justify-center gap-2 mb-1">
            <Input
              id="value"
              type="number"
              value={value}
              onChange={(e) => setValue(Number(e.target.value))}
              className="w-24 text-right"
            />
            {
              rateUnit === 'requests' &&
              <>
              <Label htmlFor="value" className="block font-medium">
                requests each
              </Label>
                <button onClick={() => setRateUnit('cents')} className="text-white bg-red-500 p-1 rounded-md text-xs">
                use cents
              </button>
              </>
            }
            {
              rateUnit === 'cents' &&
              <>
                <Label htmlFor="value" className="block font-medium">
                  US cents each
                </Label>
                <button onClick={() => setRateUnit('requests')} className="text-white bg-red-500 p-1 rounded-md text-xs">
                  use requests
                </button>
              </>
            }

          </div>
        </div>
        <div>
          <RadioGroup id="time-unit" value={timeUnit} onValueChange={setTimeUnit} className="grid grid-cols-5 gap-2 mt-2">
            <Label
              htmlFor="time-unit-minute"
              className={`border cursor-pointer rounded-md p-2 flex items-center justify-center ${timeUnit === "minute" ? "bg-muted" : ""
                }`}
            >
              <RadioGroupItem id="time-unit-minute" value="minute" />
              Minute
            </Label>
            <Label
              htmlFor="time-unit-hour"
              className={`border cursor-pointer rounded-md p-2 flex items-center justify-center ${timeUnit === "hour" ? "bg-muted" : ""
                }`}
            >
              <RadioGroupItem id="time-unit-hour" value="hour" />
              Hour
            </Label>
            <Label
              htmlFor="time-unit-day"
              className={`border cursor-pointer rounded-md p-2 flex items-center justify-center ${timeUnit === "day" ? "bg-muted" : ""
                }`}
            >
              <RadioGroupItem id="time-unit-day" value="day" />
              Day
            </Label>
            <Label
              htmlFor="time-unit-week"
              className={`border cursor-pointer rounded-md p-2 flex items-center justify-center ${timeUnit === "week" ? "bg-muted" : ""
                }`}
            >
              <RadioGroupItem id="time-unit-week" value="week" />
              Week
            </Label>
            <Label
              htmlFor="time-unit-month"
              className={`border cursor-pointer rounded-md p-2 flex items-center justify-center ${timeUnit === "month" ? "bg-muted" : ""
                }`}
            >
              <RadioGroupItem id="time-unit-month" value="month" />
              Month
            </Label>
          </RadioGroup>
        </div>
      </div>
    </div>
  )
}
